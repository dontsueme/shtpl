#!/bin/sh
# Author: Stefan Giermair (zstegi@gmail.com)
# License GPLv3+: GNU GPL version 3 or later <http://gnu.org/licenses/gpl.html>.
# This is free software: you are free to change and redistribute it. There is NO WARRANTY, to the extent permitted by law.

print_help() {
  printf "\n  %s\n\n  %s\n  %s\n  %s\n  %s\n  %s\n  %s\n\n  %s\n  %s\n\n  %s\n\n"\
  "tinytpl (VERSION) - a shell template engine"\
  "syntax:"\
  "#% shell-command"\
  "#%# comment"\
  "#%include file"\
  "#slurp (removes trailing newline)"\
  "%$ masks $"\
  "options:"\
  "-ass/--allow-subshell: does not mask \$(, ´"\
  "usage: sh -c \"\$( tinytpl [options] template )\""
  exit $1 
}

unset ASS
if [ "$1" = "-h" ] || [ "$1" = "--help" ]; then
  print_help 0
elif [ "$1" = "-ass" ] || [ "$1" = "--allow-subshell" ]; then
  # don't mask $(, ´
  export ASS=1
  shift 
fi

OPT=""
CACHE=
#NL=$'\n'
NL="$( printf "\nx" )"
NL=${NL%x}

addCache() {
  [ "$CACHE" ] && CACHE="$CACHE$NL$1" || CACHE="\"$1"
}

printCache() {
  [ "$CACHE" ] && printf "printf \"%%s\\\\n\" %s\n" "$CACHE\"" && CACHE=
}

tinytpl() {
  FILE="$1"
  IFS=
  while read -r 'LINE'; do  
    if printf "%s" "$LINE" | grep -q "^#%"; then
      [ "$OPT" ] && printCache
      if printf "%s" "$LINE" | grep -q "^#%include"; then
        tinytpl "$( printf "%s" "$LINE" | sed -e s/"^#%include"// -e s/^\ *// -e s/\ *$// )"
      else
        printf "%s\n" "$( printf "%s" "$LINE" | sed s/"^#%"// )"
      fi
      continue
    fi

    # dangerous signs are:  \, ", $(, ´ 
    LINE="$( printf "%s" "$LINE" | sed -e s/"\\\\"/"\\\\\\\\"/g -e s/'"'/'\\"'/g -e s/'%\$'/'\\$'/g )"
    if [ -z "$ASS" ]; then
      LINE="$( printf "%s" "$LINE" | sed -e s/'$('/'\\$('/g -e s/'`'/'\\`'/g )"
    fi

    if printf "%s" "$LINE" | grep -q "#slurp$"; then
      [ "$OPT" ] && printCache
      LINE="$( printf "%s" "$LINE" | sed s/"#slurp$"// )"
      printf "%s\n" "printf \"%s\" \"$LINE\""
    else 
      if [ "$OPT" ]; then 
        addCache "$LINE"
      else
        printf "%s\n" "printf \"%s\\n\" \"$LINE\""
      fi
    fi
  done < "$FILE"
}

tinytpl "$1"
Ret=$?
[ $? = 0 ] && [ "$OPT" ] && printCache
exit $Ret 
