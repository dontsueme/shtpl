#!/bin/sh
# Author: Stefan Giermair (zstegi@gmail.com)
# License GPLv3+: GNU GPL version 3 or later <http://gnu.org/licenses/gpl.html>.
# This is free software: you are free to change and redistribute it. There is NO WARRANTY, to the extent permitted by law.

print_help() {
  printf "\n  %s\n"\
  "tinytpl (VERSION) - a shell template engine

  syntax:
  #% shell-command
  #%# comment
  #%include file
  #%raw 
  #%end raw
  #%incraw file (include raw file)
  #slurp        (removes trailing newline)
  %$            (masks $)

  options:
  -ass/--allow-subshell: does not mask \$(, ´
  -o  /--optimize      : minimize printf usage

  usage: sh -c \"\$( tinytpl [options] template )\"
"
  exit $1 
}

unset Ass
unset Opt

while true; do
  case $1 in
    -h|--help)
      print_help 0
      ;;
    -ass|--allow-subshell)
      Ass=1
      shift
      ;;
    -o|--optimize)
      Opt=1
      shift
      ;;
    *)
      break
      ;;
  esac
done

unset Cache
#Nl=$'\n'
Nl="$( printf "\nx" )"
Nl=${Nl%x}

addCache() {
  [ "$Cache" ] && Cache="$Cache$Nl$1" || Cache="\"$1"
}

printCache() {
  [ "$Cache" ] && printf "printf \"%%s\\\\n\" %s\n" "$Cache\"" && unset Cache 
}

tinytpl() {
  File="$1"
  Raw="$2"
  IFS=
  while read -r 'Line'; do  
    if [ -z "$Raw" ] && printf "%s" "$Line" | grep -q "^#%"; then
      if printf "%s" "$Line" | grep -q "^#%include"; then
        tinytpl "$( printf "%s" "$Line" | sed -e s/"^#%include"// -e 's/^ *//' -e 's/ *$//' )"
      elif printf "%s" "$Line" | grep -q "^#%incraw"; then
        tinytpl "$( printf "%s" "$Line" | sed -e s/"^#%incraw"// -e 's/^ *//' -e 's/ *$//' )" "RAW"
      elif printf "%s" "$Line" | grep -q "^#%raw[ ]*$" ; then
        Raw="TEXT"
      else
        [ "$Opt" ] && printCache
        printf "%s\n" "$( printf "%s" "$Line" | sed s/"^#%"// )"
      fi
      continue
    elif [ "$Raw" = "TEXT" ] && printf "%s" "$Line" | grep -q "^#%end raw"; then
      unset Raw
      continue
    fi

    # dangerous signs are:  \, ", $(, ´ 
    Line="$( printf "%s" "$Line" | sed -e s/"\\\\"/"\\\\\\\\"/g -e s/'"'/'\\"'/g )"
    if [ "$Raw" ]; then
      Line="$( printf "%s" "$Line" | sed -e s/'\$'/'\\$'/g -e s/'`'/'\\`'/g )"
    else
      Line="$( printf "%s" "$Line" | sed -e s/'%\$'/'\\$'/g )"
      if [ -z "$Ass" ]; then
        Line="$( printf "%s" "$Line" | sed -e s/'$('/'\\$('/g -e s/'`'/'\\`'/g )"
      fi
    fi

    if [ -z "$Raw" ] && printf "%s" "$Line" | grep -q "#slurp$"; then
      [ "$Opt" ] && printCache
      Line="$( printf "%s" "$Line" | sed s/"#slurp$"// )"
      printf "%s\n" "printf \"%s\" \"$Line\""
    else 
      if [ "$Opt" ]; then 
        addCache "$Line"
      else
        printf "%s\n" "printf \"%s\\n\" \"$Line\""
      fi
    fi
  done < "$File"
  unset Raw 
}

tinytpl "$1" && [ "$Opt" ] && printCache
